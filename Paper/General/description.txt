[Tên bài báo, Năm công bố, số citation, Kĩ thuật sử dụng, dataset]
-------------------------------------------------------------

1. Forum Thread Recommendation for Massive Open Online Courses
- 2014
- 73 citations
- Forum thread use feature-base matrix and contextual Modeling
- Dataset: Coursera course: ‘Learn to Program: The Fundamentals’, shortened to ‘Python Course’. It has 3590 active students who have at least one post in the forum and 3079 threads across
around eight weeks, based on which we performed the time window evaluation. For each thread, we have its replies and
comments; threads’ contents and students’ registration time are also available.


2. The Use of Machine Learning Algorithms in Recommender Systems:
A Systematic Review
- 2018
- 139 citations
- Some approachs RS in ML
- Dataset: movielens - https://grouplens.org/datasets/movielens/


3. MATRIX FACTORIZATION TECHNIQUES FOR RECOMMENDER SYSTEMS
- 2009
- 6534 citations
- Matrix factorization.
- Dataset: Netflix movies - https://www.kaggle.com/netflix-inc/netflix-prize-data


4. Context aware
- 2011
- 2187 citations
- Context-base


5. Collaborative Filtering Recommender Systems
- 2007
- 1841 citations
- Collaborative filtering: 
+ User-Based Nearest Neighbor Algorithms 
+ Practical Challenges of User-Based Algorithms 
+ Item-Based Nearest Neighbor Algorithms 
+ Practical Challenges in Item-Based Algorithms 
+ Practical Challenges in Dimensionality Reduction Algorithms 
+ Association Rule Mining
- MovieLens, Jester: http://eigentaste.berkeley.edu/dataset/, and Book Crossing: http://www2.informatik.uni-freiburg.de/~cziegler/BX/


6. Trust in Recommender Systems
- 2005
- 999 citations
- build on trust
- MovieLens dataset


7.Hybird web recommender system
- 2007
- 1410 citations
- hybrid base: Collaborative Pearson, Collaborative Heuristic, Content-based, knowdlege-based


8. Hybrid Recommender Systems: Survey and Experiments
- 2002
- 4372 citations
- hybrid-based: content-based,collaborative, demographic, utility-based and knowledge-based
- entree Chicago - https://archive.ics.uci.edu/ml/datasets/Entree+Chicago+Recommendation+Data


9. Knowledge-based recommender systems
- 2000
- 919 citations
- knowdledge based.
- entree Chicago dataset


10.Wide & Deep Learning for Recommender Systems
- 2016
- 686 citations
- Wide & Deep Learning


11. Collaborative Deep Learning for Recommender Systems
- 2015
- 786 citations.
- CF-based: deep learning
- citeulike-a: https://github.com/js05212/citeulike-a, citeulike-t: https://github.com/changun/CollMetric/tree/master/citeulike-t, Netflix


12.Collaborative Knowledge Base Embedding for Recommender Systems
- 2016
- 317 citations
- leverage the heterogeneous information in a knowledge base to improve the
quality of recommender systems.
- Movielens, intentbooks: https://github.com/Microsoft/Recommenders/issues/525

 
13. Collaborative Denoising Auto-Encoders for Top-N Recommender Systems
- 2016
- 321 citations
- CF-based use autoencoders for Top-N
- 3 popular data sets: MovieLens 10M, Netflix8 and Yelp (from Yelp Dataset Challenge9 in 2014).


14. Three-way recommender systems based on random forests
- 2016
- 134 citations
- Knowledge-based: use random forests
- movielens


15. A Multi-View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems
- 2015
- 303 citations.
- content-based.
- The data contains 33,739 authors from five domains (data mining, theory etc.), where each data entry specifies the name of the research field, the title and
abstract of a paper, the list of authors and the year the paper got published - https://www.aminer.cn/billboard/collaboration


16. Fast Matrix Factorization for Online Recommendation with Implicit Feedback
- 2017
- 365 citations
- matrix factorization, online learning.
- datasets: yelp, amazon - http://snap.stanford.edu/data/web-Amazon-links.html


http://snap.stanford.edu/data/web-Amazon-links.htmand Amazon Movies
17. Neural Collaborative Filtering
- 2017
- 965 citations
- CF: Neural network
- MovieLens and Pinterest - https://data.mendeley.com/datasets/fs4k2zc5j5/3


[Name, Citation, Year, Author, Method, Data, Evaluate]
18. The Youtube video recommend system
- Citation: 779
- Year: 2010
- Authors: James Davidson, Benjamin Liebald, Junning Liu, Palash Nandy, Taylor Van Vleet
- Method: Content-based recommended system (based on content that user insterest and selected before).
  + Generate top k video and then rank based on video content data (meta data, raw videos steam, title, description), user activity data (rating a video, like, subcript). And then rank that top k video.
- Data: youtube video data
- Evaluate: Better than when compare to "Top rated", "Most view" and "Top favorite".
<img>

19. A Personalized Courseware Recommendation System based on Fuzzy Item Response Theory
- Citation: 61
- Year: 2004
- Authors: Chih-Ming Chen, Ling-Jiun Duh and Chao-Yu Liu
- Method: Content-based recommended system (recommended courseware based on ability of learner).
  + Estimate learner's ability -> Get top k courseware -> Rank top k courseware.
- Evaluate: The system can provide the courseware according to individual learner ability.
<img>

20. Application of context-aware and personalized recommendation to implement an adaptive ubiquitous learning system
- Citation: 182
- Year: 2011
- Authors: Shu-Lin Wang a, Chun-Yi Wu
- Method: User-based colaborative filtering (Based on simillar user by Person correlation to find top k courseware and then rank).
- Data: the flowering plants courseware database
- Evaluate: T-test.
<img>

21. Collaborative user modeling with user-generated tags for social recommender systems
- Citation: 99
- Year: 2011
- Authors: Heung-Nam Kim, Abdulmajeed Alkhaldi, Abdulmotaleb El Saddik, Geun-Sik Jo
- Method: User-based colaborative filtering (Based on tag of neighbors and enrich model for active user).
- Data: The Internet Movie Database (IMDb):
  + Top box-office movies (http://www.imdb.com/boxoffice/alltimegross).
  + Top rated movies (http://www.imdb.com/chart/top).
- Evaluate: precision and ranking accuracy.
<img>

22. Content-Based Movie Recommendation Using Different Feature Sets
- Citation: 23
- Year: 2012
- Authors: M Uluyagmur, Z Cataltepe, E Tayfur
- Method: Content-based recommended system.
- Data: 13 months of log data, the first 12 months for training phase, the last 1 month for the test phase.
  + 621 users and 3700 contents.
- Evaluate: Precision, recall and F-score.
<img>

23. Recommendation as Classification: Using Social and Content-Based Information in Recommendation
- Citation: 1425
- Year: 1998
- Authors: Chukin Basu, Haym Hirsh, William Cohen
- Method: User-Based Colaborative Filtering with:
  + No content feature.
  + Simple content features.
  + Hybric Features.
- Data: More than 45.000 movies and approximately 260 users.
- Evaluate: Precision, Recall.
<img>

24. A Recommender System for On-line Course Enrolment: An Initial Study
- Citation: 66
- Year: 2007
- Authors: O'Mahony, Michael P., Smyth, Barry
- Method: Item-Based Colaborative Filtering (Based on core modules and core subject code). ["More liked this" Recommender] 
- Data: dataset statics
  <img>
- Evaluate: 10-fold, test size 10%, recall and coverage.

25. Deep Neural Networks for YouTube Recommendations
- Citation: 694
- Year: 2016
- Authors: Paul Covington, Jay Adams, Emre Sargin
- Method: Two deep neural network, one for candidate generate and one for ranking. (Item-Based Colaborative filtering).
- Data: youtube video
- Evaluate: offline metrics (precision, recall, ranking loss).

26. A Multi-View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems
- Citation: 303
- Year: 2015
- Authors: Ali Mamdouh Elkahky, Yang Song, Xiaodong He
- Method: Content-based, Multi-view deep neural network (Develop from Deep structured sematic model - DSSM).
- Data: Four dataset from 12/2013 to 6/2014 collect from bing
  + Users
  + News
  + App
  + Mobile/TV
- Evaluate: Mean Reciprocal Rank (MRR).

27. Hybrid Recommender System based on Autoencoders
- Citation: 87
- Year: 2016
- Authors: Florian Strub, Romaric Gaudel, Jérémie Mary
- Method: Colaborative Filtering Neural Network and autoencoders
- Data: Movielens (1M, 10M, 20M), Douban
- Evaluate: Mean root square error.
--------------------------------------------------
Others: 
Deep learning for recommender system (33 papers): https://github.com/robi56/Deep-Learning-for-Recommendation-Systems
https://github.com/Lab41/hermes/wiki/References
https://github.com/AISquaredLab/RSPapers
https://github.com/daicoolb/RecommenderSystem-Paper
dataset links:
http://www.shichuan.org/HIN_dataset.html
